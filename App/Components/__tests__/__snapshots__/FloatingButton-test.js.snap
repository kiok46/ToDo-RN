// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing FloatingButton rendering renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FloatingButton />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "activeOpacity": 0.2,
      "children": <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "tomato",
            "borderRadius": 30,
            "bottom": 30,
            "height": 60,
            "justifyContent": "center",
            "position": "absolute",
            "right": 30,
            "width": 60,
          }
        }
      >
        <Icon
          allowFontScaling={false}
          color="white"
          name="plus"
          size={32}
        />
      </View>,
      "onPress": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Icon
          allowFontScaling={false}
          color="white"
          name="plus"
          size={32}
        />,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "tomato",
          "borderRadius": 30,
          "bottom": 30,
          "height": 60,
          "justifyContent": "center",
          "position": "absolute",
          "right": 30,
          "width": 60,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "allowFontScaling": false,
          "color": "white",
          "name": "plus",
          "size": 32,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeOpacity": 0.2,
        "children": <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "tomato",
              "borderRadius": 30,
              "bottom": 30,
              "height": 60,
              "justifyContent": "center",
              "position": "absolute",
              "right": 30,
              "width": 60,
            }
          }
        >
          <Icon
            allowFontScaling={false}
            color="white"
            name="plus"
            size={32}
          />
        </View>,
        "onPress": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Icon
            allowFontScaling={false}
            color="white"
            name="plus"
            size={32}
          />,
          "style": Object {
            "alignItems": "center",
            "backgroundColor": "tomato",
            "borderRadius": 30,
            "bottom": 30,
            "height": 60,
            "justifyContent": "center",
            "position": "absolute",
            "right": 30,
            "width": 60,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowFontScaling": false,
            "color": "white",
            "name": "plus",
            "size": 32,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
